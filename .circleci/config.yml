---
    version: 2
    orbs:
        aws-cli: circleci/aws-cli@3.0.0

    aliases:
      - &deploy_config
        docker:
          - image: alpine/helm:3.6.0
        environment:
          APP: allinfra
    
      - &step_setup_remote_docker
        setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
    
      - &step_install_deps
        run:
          name: Install Dependencies
            # curl -o /usr/local/bin/aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.14.6/2019-08-22/bin/linux/amd64/aws-iam-authenticator
            # chmod u+x kubectl && mv kubectl /bin/kubectl
            # chmod 0755 /usr/local/bin/aws-iam-authenticator
          command: |
            apk add --update bash curl docker git gnupg python3 py-pip

            python3 -mpip install awscli
            curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.22.3/bin/linux/amd64/kubectl

  
    
      - &step_set_environment
        run:
          name: Set Environment
          shell: /bin/bash -eo pipefail
          command: |
            if [ "${CIRCLE_BRANCH}" == "test" ]; then
              export ENV=test
              echo 'export ENV=test' >> $BASH_ENV
              echo ${CIRCLE_OIDC_TOKEN}
              echo ${ENV}
            else
              echo 'Unknown Branch' >&2
              exit 1
            fi
      - &step_verify
        run:
          name: Verify AWS credentials
          shell: /bin/bash -eo pipefail
          command: aws sts get-caller-identity

      - &step_deploy
        run:
          name: Deploy
          shell: /bin/bash -eo pipefail
          command: |
            aws s3 ls
            echo $AWS_SESSION_TOKEN
            aws eks list-clusters --region=ap-northeast-1
 
    workflows:
      version: 2
    
      k8s_build_and_deploy:
        jobs:
          - deploy:
              filters:
                branches:
                  only:
                    - test
                    - staging
                    - master
    
    jobs:    
      deploy:
        <<: *deploy_config
        steps:
          - checkout
          - *step_setup_remote_docker
          - *step_install_deps
          - *step_set_environment
          - *step_verify
          - *step_deploy
    
